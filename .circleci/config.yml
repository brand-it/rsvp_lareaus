# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/ruby:2.5.1-node-browsers
  environment:
    PGHOST: 127.0.0.1
    PGUSER: loot_user
    RAILS_ENV: test
    NODE_ENV: test
#     - image: circleci/postgres:9.5-alpine
#       environment:
#         POSTGRES_USER: loot_user
#         POSTGRES_DB: loot_test
#         POSTGRES_PASSWORD: ""
jobs:
  setup:
    <<: *defaults
    steps:
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter

      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
  rspec:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            bundle clean

      - run:
          name: Installing Yarn
          command: |
            yarn install

      - run:
          name: Precomple Webpack Stuff
          command: |
            bundle exec rails webpacker:compile

      - save_cache:
          paths:
            - vender/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run tests
          command: |
            mkdir ./tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out ./tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
      - run:
          name: format simple cov
          command: |
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.rspec.json coverage/backend/.resultset.json

      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec.json

  upload_coverage:
    <<: *defaults
    # environment:
    #   - CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
    steps:
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 1 -o tmp/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
workflows:
  version: 2
  code_change:
    jobs:
      - setup
      - rspec:
          requires:
            - setup
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - rspec
      - upload_coverage:
          requires:
             - rspec
